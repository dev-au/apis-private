def generate_api(api_limit: int):    import random    api_limit*=1000000    text = str()    for i in range(len(str(api_limit))):        text += "abcdefghij"[int(str(api_limit)[i])]    numb = random.randint(2, 9)    coded = str()    abc = "qwertyuiopasdfghjklzxcvbnm"    abc1 = str()    rand_abc = random.randint(0, 25)    for let in range(26):        abc1 += abc[(rand_abc + let) % 25]    abc2 = "abcdefghijklmnopqrstuvxwyz"    code = f"{bin(rand_abc)[2:]}-"    for char in text:        real_char = abc1[abc2.index(char)]        ind_rand = random.randint(0, 3)        for i in range(4):            nm = random.randint(0, 25)            rand_char1 = abc1[nm]            if ind_rand == i:                code += real_char            else:                code += rand_char1        code += "-" + bin(int(bin(ind_rand)[2:]))[2:] + "-"    code = code[:-1]    coded += code[::-1]    coded += str(numb)    return codeddef get_api_limit(api_key: str):    decoded = str()    for txt in api_key[:-1].split(api_key[-1]):        text = txt[::-1]        codes = text.split("-")[0]        cut_ind = text[text.index("-") + 1:]        rand_abc = int(codes, 2)        bins = cut_ind.split("-")[::-2]        chars = cut_ind.split("-")[::2]        abc = "qwertyuiopasdfghjklzxcvbnm"        abc1 = str()        abc2 = "abcdefghijklmnopqrstuvxwyz"        for let in range(26):            abc1 += abc[(rand_abc + let) % 25]        decs = []        for bin_nm in bins:            sort_1 = int(f"0b{bin_nm}", 2)            sort_2 = int(f"0b{sort_1}", 2)            decs.append(sort_2)        decs.reverse()        char_sort1 = str()        ind = 0        for char_nm in chars:            get_ind = (decs[ind])            char_sort1 += char_nm[get_ind]            ind += 1        char_sort2 = str()        for char_nm in char_sort1:            char_sort2 += abc2[abc1.index(char_nm)]        decoded += f"{char_sort2} "    result = decoded[:-1]    api_limit = str()    for i in result:        api_limit += str("abcdefghij".index(i))    return int(api_limit)//1000000